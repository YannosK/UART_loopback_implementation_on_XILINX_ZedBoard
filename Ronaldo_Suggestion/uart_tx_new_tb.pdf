library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;

entity uart_tx_tb is
end uart_tx_tb;

architecture Behavioral of uart_tx_tb is
    constant C_CLK_PERIOD : time := 10 ns;

    signal clk       : STD_LOGIC := '0';
    signal reset     : STD_LOGIC := '0';
    signal baud_tick : STD_LOGIC;
    
    signal TX_write  : STD_LOGIC := '0';
    signal TX_DATA   : STD_LOGIC_VECTOR(7 downto 0) := "11001010";
    signal TX_Ready  : STD_LOGIC;
    signal TxD       : STD_LOGIC; 

begin
    baud_gen: entity work.baud_gen
        Port map (
            clk => clk,
            reset => reset,
            en_16x_tick => baud_tick
        );
    
    uart_tx : entity work.UART_transmitter
        Port map (
            clock    => baud_tick,
            reset    => reset,
            TX_write => TX_write,
            TX_Data  => TX_Data,
            TX_Ready => TX_Ready,
            TxD      => TxD
        );
        
    clk_process :process
    begin
        wait for C_CLK_PERIOD / 2;
        clk <= not clk;
    end process;

    stim_proc: process
    begin
        reset <= '1';
        wait for 100 ns;
        reset <= '0';
        
        TX_Write <= '1';
        wait until rising_edge(baud_tick);
        wait until rising_edge(baud_tick);
        TX_Write <= '0';
        
        wait;
    end process;

end Behavioral;

